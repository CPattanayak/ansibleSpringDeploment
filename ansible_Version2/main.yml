---
- hosts: localhost
  
  tasks:

  - name: Install python-boto library
    pip: name=boto

  - name: Setting up Security/Firewall Group
    ec2_group:
       name: Demo_Security
       description: "demo security group"
       aws_access_key: 
       aws_secret_key: 
       region: us-east-1
       rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
       rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0  

  - name: Provissioning cluster
    ecs_cluster:
      name: developmentcluster
      state: present
      region: us-east-1
      aws_access_key: 
      aws_secret_key: 
    register: task_output

  - name: Provission a EC2 Instance
    ec2:
       key_name: Chandan-Key
       region: us-east-1
       aws_access_key: 
       aws_secret_key: 
       instance_type: t2.micro
       instance_profile_name: ecsInstanceRole
       image: ami-fad25980
       user_data: "#!/bin/bash\n
                   echo ECS_CLUSTER=developmentcluster >> /etc/ecs/ecs.config\n
                   sudo yum update -y ecs-init\n"
       wait: yes
       wait_timeout: 500
       count: 1
       instance_tags:
         Name: awslabserver
         Owner: Chandan
       monitoring: no
       vpc_subnet_id: subnet-eb7fd8b6
       assign_public_ip: yes
       group: Demo_Security
    register: ec2_out

  - name: wait for SSH to come up
    wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
    with_items: '{{ec2_out.instances}}'
  
  - name: creating taskdefination
    ecs_taskdefinition:
      region: us-east-1
      aws_access_key: 
      aws_secret_key: 
      containers:
      - name: demo_application
        cpu: 2
        essential: true
        image: "cpattanayak/spring-petclinic"
        memory: 500
        portMappings:
        - containerPort: 8080
          hostPort: 80
      state: present
      family: test_task
    register: task_def_output

  - name: create ecs service
    ecs_service:
      state: present
      region: us-east-1
      aws_access_key: 
      aws_secret_key: 
      name: demo_service
      cluster: "developmentcluster"
      task_definition: "{{  task_def_output.taskdefinition[\"family\"]   }}:{{ task_def_output.taskdefinition[\"revision\"] }}"
      desired_count: 1       
    register: service_output 
 

